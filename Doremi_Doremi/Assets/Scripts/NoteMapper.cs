using System.Collections.Generic;  // Dictionary 사용을 위한 네임스페이스

/// <summary>
/// NoteMapper 클래스는 음이름(pitch)에 대응하는 오선(line)상의 상대적 위치(index)를 제공하는 유틸리티입니다.
/// C4부터 C5 영역의 표준 음역과 샵 음(#)에 대해 고정된 값을 매핑하여 반환합니다.
/// </summary>
public class NoteMapper
{
    // 음이름을 오선 기준 상대 위치로 매핑하는 Dictionary
    // 오선 5줄은 -2, -1, 0, 1, 2 값을 가지며,
    // 추가 보조선이나 선 사이 공간은 0.5 단위로 위치를 표현합니다.
    private readonly Dictionary<string, float> noteToIndex = new()
    {
        // 🎼 표준 음역대 (C4-C5)
        // 음표 이름 : 오선 상 상대 위치 (lineIndex)
        { "E3", -4.0f },  // 세 번째 추가 보조선 아래
        { "F3", -3.5f },  // 세 번째 추가 보조선 아래
        { "G3", -3.0f },  // 두 번째 추가 보조선 아래
        { "A3", -2.5f },  // 두 번째 추가 보조선 아래
        { "B3", -2.0f },  // 첫 번째 추가 보조선 아래
        { "C4", -1.5f },  // 첫 번째 추가 보조선 아래
        { "D4", -1.0f },  // 첫 번째 보조선과 두 번째 보조선 사이
        { "E4", -0.5f },  // 첫 번째 보조선 위 (첫 번째 오선 아래)
        { "F4", 0f },  // 첫 번째 오선과 두 번째 오선 사이
        { "G4", 0.5f },  // 두 번째 오선 위치
        { "A4", 1.0f },  // 두 번째와 세 번째 오선 사이
        { "B4", 1.5f },  // 세 번째 오선 위치
        { "C5", 2.0f },  // 세 번째와 네 번째 오선 사이
        { "D5", 2.5f },  // 네 번째 오선 위치
        { "E5", 3.0f },  // 네 번째와 다섯 번째 오선 사이
        { "F5", 3.5f },  // 다섯 번째 오선 위치
        { "G5", 4.0f },  // 첫 번째 추가 보조선 (오선 위)
        { "A5", 4.5f },  // 첫 번째 추가 보조선 (오선 위)
        { "B5", 5.0f },  // 두 번째 추가 보조선 (오선 위)
        { "C6", 5.5f },  // 두 번째 추가 보조선 (오선 위)
        { "D6", 6.0f },  // 세 번째 추가 보조선 (오선 위)
        { "E6", 6.5f },  // 세 번째 추가 보조선 (오선 위)
        { "F6", 7.0f },  // 네 번째 추가 보조선 (오선 위)
        { "G6", 7.5f },  // 네 번째 추가 보조선 (오선 위)
        { "A6", 8.0f },  // 다섯 번째 추가 보조선 (오선 위)
        { "B6", 8.5f },  // 다섯 번째 추가 보조선 (오선 위)
        { "C7", 9.0f },  // 여섯 번째 추가 보조선 (오선 위)

        // 🎵 샵(#) 음 (S 접미사 사용)
        // 샵 음의 위치를 위 음표 사이에 미세하게 조정
        { "C4S", -3.8f }, { "D4S", -3.3f },
        { "F4S", -2.3f }, { "G4S", -1.8f },
        { "A4S", -1.3f }, { "C5S", -0.3f },
        { "D5S",  0.2f }, { "F5S",  1.2f }
    };

    /// <summary>
    /// pitch(예: "C4", "G4S")에 대응하는 lineIndex를 가져옵니다.
    /// </summary>
    /// <param name="pitch">음이름 문자열 (대소문자 구분: 예 "C4", "F4S")</param>
    /// <param name="index">반환될 상대 위치 (out 매개변수)</param>
    /// <returns>매핑 성공 시 true, 실패 시 false</returns>
    public bool TryGetIndex(string pitch, out float index)
        => noteToIndex.TryGetValue(pitch, out index);
}
